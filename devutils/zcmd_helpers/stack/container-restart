#!/bin/bash
VERSIONINFO=20200525.1

BASENAME=$(basename $0)
echo "SCRIPT PURPOSE: Restart a running docker container"
echo "SYNTAX: zcmd $BASENAME [CONTAINER_NAME]"
echo

THELIST=$(docker container ls | awk '{print $NF}')

CONTAINERNAME=$1
if [ ! -z "$CONTAINERNAME" ]; then

    FOUNDIT=""
    for NAME in $(docker container ls | awk '{print $NF}'); do
      if [ "$NAME" = "$CONTAINERNAME" ]; then
        FOUNDIT="$CONTAINERNAME"
        break
      fi
    done

    if [ -z "$FOUNDIT" ]; then
        #NOT a valid container name!
        echo "$CONTAINERNAME is NOT a valid container name"
    else
        echo "$CONTAINERNAME container found"
    fi

    CONTAINERNAME="$FOUNDIT"
fi

USERNAME=$2
if [ -z "$USERNAME" ]; then
    USERNAME="DEFAULT"
fi

echo "INPUT: $0 $1 $2"

function pickContainer()
{
    unset options i
    i=0
    for NAME in $(docker container ls | awk '{print $NF}'); do
      if [ ! "$NAME" = "NAMES" ]; then
        options[i++]="$NAME"
      fi
    done

    select OPT in "${options[@]}" "QUIT"; do
      case $OPT in
        "QUIT")
          echo "Exiting the script now!"
          echo
          CONTAINERNAME=""
          break
          ;;
        '')
          echo "Not a valid option"
          ;;
        *)
          echo "Container named $OPT selected ..."
          echo
          CONTAINERNAME="$OPT"
          break
          ;;
      esac
    done
}

if [ -z "$CONTAINERNAME" ]; then
    
    echo "Missing container name!"
    echo "PICK A CONTAINER..."

    pickContainer

    #echo "$THELIST"

    #echo
    #echo "Must provide a container name!"
    if [ -z "$CONTAINERNAME" ]; then
        exit 1
    fi
fi

source $HOME/zcmd/devutils/default-docker-env.txt
source $HOME/zcmd/devutils/function-library/check-context.bash

lib_isRuntimeStackFolder
if [ $? -ne 0 ]; then
    echo "ERROR: The command must be invoked from a valid stack context folder."
    exit 2
fi
ZCMD_LAUNCHDIR=$(pwd)
source ./stack.env

echo docker container restart ${CONTAINERNAME}
docker container restart ${CONTAINERNAME}
echo


    



